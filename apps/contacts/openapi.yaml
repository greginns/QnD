openapi: "3.0.0"
info:
  version: 1.0.0
  title: Contacts
  license:
    name: MIT
servers:
  - url: https:roam3.adventurebooking.com/contacts/v1
paths:
  /contact:
    get:
      summary: Get many Contacts
      operationId: "contacts.contact.getMany"
      tags:
        - "contacts.contact"
      parameters:
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/orderbyParam"
        - $ref: "#/components/parameters/fieldsParam"
        - $ref: "#/components/parameters/filtersParam"
      responses:
        "200":
          description: Array of Contact objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
    post:
      summary: Create Contact entry
      operationId: "contacts.contact.create"
      tags:
        - "contacts.contact"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        "200":
          description: One Contact object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
  /contact/{id}:
    get:
      summary: Get one Contact
      operationId: "contacts.contact.getOne"
      tags:
        - "contacts.contact"
      parameters:
        - $ref: "#/components/parameters/contactid"
      responses:
        "200":
          description: One Contact object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
    put:
      summary: Update Contact entry
      operationId: "contacts.contact.update"
      tags:
        - "contacts.contact"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      parameters:                
        - $ref: "#/components/parameters/contactid"
      responses:
        "200":
          description: One Contact object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
    delete:
      summary: Delete Contact entry
      operationId: "contacts.contact.delete"
      tags:
        - "contacts.contact"
      parameters:
        - $ref: "#/components/parameters/contactid"
      responses:
        "200":
          description: One Contact object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
components:
  parameters:
    limitParam:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      required: false
      schema:
        type: integer
        format: int32
    offsetParam:
      name: offset
      in: query
      description: How many entries to skip
      required: false
      schema:
        type: integer
        format: int32
    orderbyParam:
      name: orderby
      in: query
      description: "Comma separated list of sort order fields: ie col1,-col2"
      required: false
      schema:
        type: string
    fieldsParam:
      name: fields
      in: query
      description: "Comma separated list of fields to return, ie: col1,col2"
      required: false
      schema:
        type: string
    filtersParam:
      name: filters
      in: query
      description: "Comma separated list of filter fields: ie col1|Miller,col2|Greg"
      required: false
      schema:
        type: string
    contactid:
      name: id
      in: path
      required: true
      description: The id of the Contact to retrieve
      schema:
        type: string
  schemas:
    Contact:
      type: object
      required:
        - id
        - first
        - last
        - group
      properties:
        id:
          type: string
        first:
          type: string
        last:
          type: string
        group:
          type: string
        address:
          type: string
        email:
          type: string
        fullname:
          type: string
    Contacts:
      type: array
      items:
        $ref: "#/components/schemas/Contact"
